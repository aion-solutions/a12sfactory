worker_processes 1;

error_log  /dev/stderr warn;
pid        /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # (https://t37.net/optimisations-nginx-bien-comprendre-sendfile-tcp-nodelay-et-tcp-nopush.html)
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 65;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    gzip on;
    gzip_disable "msie6";

    server_tokens off;

    client_body_temp_path /tmp/client_body;
    fastcgi_temp_path /tmp/fastcgi_temp;
    proxy_temp_path /tmp/proxy_temp;
    scgi_temp_path /tmp/scgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;

    client_max_body_size 32M;
    client_body_buffer_size 32M;

    server {
        listen 8000;
        server_name default;

        root /app/web;
        index index.php index.html ;

        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' hello.myfonts.net; img-src 'self' data:; script-src 'self' 'unsafe-eval';frame-ancestors 'self'; form-action 'self';" always;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location = /backup {
            deny all;
        }

        # Very rarely should these ever be accessed outside of your lan
        location ~* \.(txt|log)$ {
            allow 127.0.0.1;
            deny all;
        }
        # Search engines musn't index pdf and doc/docx
        location ~* \.(doc|docx|pdf)$ {
            add_header X-Robots-Tag "noindex, nofollow";
            try_files $uri /index.php?$query_string;
        }
        location / {
            try_files $uri /index.php?$query_string;
        }

        # XML Sitemap support.
        location = /sitemap.xml {
            try_files $uri @drupal;
        }

        location @drupal {
            index index.php;
            rewrite ^ /index.php;
        }
        # In Drupal 8, we must also match new paths where the '.php' appears in the
        # middle, such as update.php/selection. The rule we use is strict, and only
        # allows this pattern with the update.php front controller.  This allows
        # legacy path aliases in the form of blog/index.php/legacy-path to continue
        # to route to Drupal nodes. If you do not have any paths like that, then
        # you might prefer to use a laxer rule, such as:
        #   location ~ \.php(/|$) {
        # The laxer rule will continue to work if Drupal uses this new URL pattern
        # with front controllers other than update.php in a future release.
        # As we do not use the update.php script for safety, and rely on server
        # scripts for the update, we use a more restrictive rule. The original one
        # is the following:
        #   location ~ '\.php$|^/update.php' {
        # Allow only a few php files to improve security.
        # For "cron" or "update" tasks use drupal console instead.
        location ~* ^/(index|core/install|xmlrpc)\.php$ {
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
            include fastcgi_params;
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_param HTTPS on;
            fastcgi_param HTTP_SCHEME https;
            fastcgi_param HTTP_X_FORWARDED_PORT 443;
            fastcgi_param HTTP_X_FORWARDED_PROTO https;
            fastcgi_intercept_errors on;
            fastcgi_pass ${PROJECT_NAME}_php:9000;
            # debug: set a very long timeout for the debugger : 10 minutes
            fastcgi_read_timeout 1800;
        }

        location ~* ^.+\.php$ {
            return 404;
        }

        location ~ ^/sites/.*/files/styles/ {
            access_log off;
            try_files $uri @drupal;
        }

        # No HTTP access to private files
        location ~ ^/sites/.*/private {
            return 403;
        }

        # No direct download to drupal files
        location ~* ^(?:.+\.(?:htaccess|make|txt|log|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
            return 403;
        }

        # All static files will be served directly.
        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|otf|ttf|eot|woff|svg)$ {
            access_log off;
            expires 30d;
            # No need to bleed constant updates. Send the all shebang in one
            # fell swoop.
            tcp_nodelay off;
            # Set the OS file cache.
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
            # If the media doesn't exists fallback to drupal
            error_page 404 = @drupal;
        }
    }
}
